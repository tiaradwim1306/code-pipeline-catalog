version: 0.2
run as: root

env:
  variables:
    ECR_REGION: "us-east-1"
    CONTAINER_NAME: lks-catalog-container
    IMAGE_REPO: lks-catalog-image

phases:
  install:
    runtime-versions:
      docker: 20
      nodejs: 16
  pre_build:
    commands:
      - echo "Install dependencies and login into ECR"
      - aws configure set region $ECR_REGION
      - aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com 
      - ECR_REPO-$AWS_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/$IMAGE_REPO
      - echo AWS_ACCESS_KEY_${AWS_ACCESS_KEY} >> .env.production
      - echo AWS_SECRET_KEY_${AWS_SECRET_KEY} >> .env.production
      - echo AWS_ACCESS_KEY_${AWS_ACCESS_KEY} >> .env.testing
      - echo AWS_SECRET_KEY_${AWS_SECRET_KEY} >> .env.testing
  build:
    commands:
      - echo "Run unit testing and build docker image"
      - npm install
      - npm run test
      - docker build -t $IMAGE_REPO:$IMAGE_TAG -f Dockerfile .
      - docker tag $IMAGE_REPO:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/$IMAGE_REPO:$IMAGE_TAG
  post_build:
    commands:
      - echo "Push docker image to ECR"
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/$IMAGE_REPO:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $IMAGE_REPO:$IMAGE_TAG > imagedefinitions.json
      - echo "build completed"

reports:
  testreports:
    files: 'report/test-report.xml'
    file-format: JUnitXml

artifacts:
  files:
    - imagedefinitions.json
    - Dockerrun.aws.json
